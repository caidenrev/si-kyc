/**
 * @fileOverview
 * Core Philosophy:
 * This ruleset enforces a strict separation between customer and transaction data. Customers cannot list all customer records. Only the owner of a given customer record can perform create, update, and delete operations.
 *
 * Data Structure:
 * - /customers/{customerId}: Stores KYC data for each customer.
 * - /transactions/{transactionId}: Stores transaction records.
 *
 * Key Security Decisions:
 * - Listing all customers is disallowed. Only the customer themselves can access their record.
 *
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces that only authenticated users can read a specific customer document, and only the customer themselves can create, update or delete it.
     * @path /customers/{customerId}
     * @allow get: if isSignedIn() && isOwner(customerId);
     * @allow list: if false;
     * @allow create: if isSignedIn() && isOwner(customerId);
     * @allow update: if isSignedIn() && isExistingOwner(customerId);
     * @allow delete: if isSignedIn() && isExistingOwner(customerId);
     * @principle Enforces document ownership for writes.
     */
    match /customers/{customerId} {
      // Read rules
      allow get: if isSignedIn() && isOwner(customerId);
      allow list: if false;

      // Write rules
      allow create: if isSignedIn() && isOwner(customerId);
      allow update: if isSignedIn() && isExistingOwner(customerId);
      allow delete: if isSignedIn() && isExistingOwner(customerId);
    }

    /**
     * @description Allows any authenticated user to read transaction data, and restricts create, update, and delete operations.
     * @path /transactions/{transactionId}
     * @allow get: if isSignedIn();
     * @allow list: if isSignedIn();
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @principle Transactions are readable to any authenticated user, but create, update, and delete operations are not permitted.
     */
    match /transactions/{transactionId} {
      // Read rules
      allow get: if isSignedIn();
      allow list: if isSignedIn();

      // Write rules - DENY ALL
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }
  }
}